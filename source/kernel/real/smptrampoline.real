org 0x1000
bits 16

%include "source/kernel/real/gdtfields.inc"

cli
cld

xor ax, ax
mov ds, ax

; set the flag
mov byte [0x510], 1

jmp 0x0:fixCS
fixCS:
mov es, ax
mov fs, ax
mov gs, ax
mov ss, ax

lgdt [GDTPointer]

mov edx, dword [0x540]
mov cr3, edx

mov eax, cr4
or eax, 1 << 5
mov cr4, eax

mov ecx, 0xC0000080
rdmsr

or eax, 0x00000100
wrmsr

mov eax, cr0
or eax, 0x80000001
and eax, ~(0x60000000)
mov cr0, eax

jmp 0x08:.mode64
.mode64:
bits 64
mov ax, 0x10
mov ds, ax
mov es, ax
mov ss, ax
mov ax, 0x1b
mov fs, ax
mov gs, ax

mov rsp, qword [0x550]

lgdt [0x580]
lidt [0x590]

; enable SSE
mov rax, cr0
and al, 0xfb
or al, 0x02
mov cr0, rax
mov rax, cr4
or ax, 3 << 9
mov cr4, rax

; set up the PAT properly
mov rcx, 0x277
rdmsr
mov edx, 0x0105     ; write-protect and write-combining
wrmsr

; Load GS with the CPU local struct base address
mov rcx, 0xC0000101
mov eax, dword [0x560]
mov edx, dword [0x560+4]
wrmsr

; Load TSS
mov ax, 0x38
ltr ax

; jump to entry point
mov rbx, qword [0x520]
call rbx
